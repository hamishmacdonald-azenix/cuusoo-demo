{
	"name": "Databricks_Job_Run_Sequential",
	"properties": {
		"description": "This pipeline will execute the Azure Logic App used to synchronously execute Databricks jobs sequentially",
		"activities": [
			{
				"name": "FEL - Loop through and execute jobs sequentially",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FN - Log start of task",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@json(string(pipeline().parameters.job_json))",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "FN - Get Task Log",
							"type": "AzureFunctionActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": "read-task-log",
								"method": "POST",
								"body": {
									"value": "@concat('{\"task_path\": \"'\n\t\t, pipeline().parameters.task_path\n\t\t, '\"}'\n)",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "Data_Platform_Function",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "FN - Log task error - Get Task Log",
							"type": "AzureFunctionActivity",
							"dependsOn": [
								{
									"activity": "FN - Get Task Log",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": "write-task-log",
								"method": "POST",
								"body": {
									"value": "@concat('{\"task_path\": \"'\n\t\t, pipeline().parameters.task_path\n\t\t, '\", \"run_date\": \"'\n\t\t, utcNow()\n\t\t, '\", \"run_status\": \"Failed\"'\n\t\t, ', \"error_message\": \"'\n\t\t, string(activity('FN - Get Task Log').error.message)\n\t\t, '\"}'\n)",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "Data_Platform_Function",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "IF - Check if task is running",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "FN - Get Task Log",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(toLower(activity('FN - Get Task Log').output.run_status), 'running')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "EP - Databricks_Job_Run",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "Databricks_Job_Run",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"job_name": {
													"value": "@item()",
													"type": "Expression"
												},
												"task_path": {
													"value": "@pipeline().parameters.task_path",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "FN - Log start of task",
				"type": "AzureFunctionActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "write-task-log",
					"method": "POST",
					"body": {
						"value": "@concat('{\"task_path\": \"'\n\t\t, pipeline().parameters.task_path\n\t\t, '\", \"run_date\": \"'\n\t\t, utcNow()\n\t\t, '\", \"run_status\": \"Running\"}'\n)",
						"type": "Expression"
					}
				},
				"linkedServiceName": {
					"referenceName": "Data_Platform_Function",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "FN - Log completion of task",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "FEL - Loop through and execute jobs sequentially",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "write-task-log",
					"method": "POST",
					"body": {
						"value": "@concat('{\"task_path\": \"'\n\t\t, pipeline().parameters.task_path\n\t\t, '\", \"run_date\": \"'\n\t\t, utcNow()\n\t\t, '\", \"run_status\": \"Completed\"}'\n)",
						"type": "Expression"
					}
				},
				"linkedServiceName": {
					"referenceName": "Data_Platform_Function",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"job_json": {
				"type": "string"
			},
			"task_path": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Transformation"
		},
		"annotations": []
	}
}